{"version":3,"sources":["scripts/colors.js","scripts/canvas.js","scripts/main.js"],"names":["currentColor","document","getElementById","prevColor","querySelector","rgbToHex","r","g","b","Error","toString","hex","rgbString","arr","split","Number","substring","slice","setCurrentColor","newColorInHex","style","backgroundColor","value","setActiveTool","name","querySelectorAll","forEach","item","classList","toggle","Canvas","cellSize","canvas","numberOfLevels","width","ctx","getContext","canvasSize","result","Array","i","length","j","x","y","fillStyle","fillRect","height","map","axisX","axisY","undefined","color","data","getImageData","evt","rect","getBoundingClientRect","clientX","left","clientY","top","defaultFill","activeTool","createMap","started","window","addEventListener","localStorage","tool","currColor","preColor","dataURL","getItem","img","Image","src","onload","drawImage","setItem","toDataURL","event","target","toolName","e","coordinates","getMousePos","sector","findCanvasSector","fillSector","colorOfCanvasPixel","beginPath","moveTo","coord","strokeStyle","lineTo","stroke","closePath","id","preventDefault","keyCode"],"mappings":"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","file":"main.95765c56.js","sourceRoot":"..","sourcesContent":["const currentColor = document.getElementById('current-color');\nconst prevColor = document.querySelector('.prevColor');\n\nfunction rgbToHex(r, g, b) {\n  if (r > 255 || g > 255 || b > 255) {\n    throw new Error('Invalid color component');\n  }\n  return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nfunction hex(rgbString) {\n  const arr = rgbString.split(',');\n  const r = Number(arr[0].substring(4));\n  const g = Number(arr[1]);\n  const b = Number(arr[2].slice(1, -1));\n  return '#' + ('000000' + rgbToHex(r, g, b)).slice(-6);\n}\n\nfunction setCurrentColor(newColorInHex) {\n  prevColor.style.backgroundColor = currentColor.value;\n  currentColor.value = newColorInHex;\n}\n\nfunction setActiveTool(name) {\n  document.getElementById('tools').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-tool', false)));\n  document.querySelector(`.${name}`).classList.toggle('active-tool');\n  if (name === 'picker') {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', true)));\n  } else {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', false)));\n  }\n}\n\nexport {\n  rgbToHex, hex, setCurrentColor, setActiveTool, currentColor, prevColor,\n};\n","import { rgbToHex } from './colors';\n\nclass Canvas {\n  constructor(cellSize = 128) {\n    this.cellSize = cellSize;\n    this.canvas = document.getElementById('canvas');\n    this.numberOfLevels = this.canvas.width / this.cellSize;\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  createMap() {\n    const canvasSize = this.canvas.width;\n    const result = new Array(this.numberOfLevels);\n\n    for (let i = 0; i < result.length; i += 1) {\n      result[i] = new Array(this.numberOfLevels);\n    }\n    for (let i = 0; i < result.length; i += 1) {\n      for (let j = 0; j < result.length; j += 1) {\n        result[i][j] = {};\n      }\n    }\n    for (let i = 0; i < canvasSize; i += this.cellSize) {\n      for (let j = 0; j < canvasSize; j += this.cellSize) {\n        result[i / this.cellSize][j / this.cellSize].x = j;\n        result[i / this.cellSize][j / this.cellSize].y = i;\n      }\n    }\n    return result;\n  }\n\n  defaultFill() {\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.fillRect(0, 0, this.canvas.height, this.canvas.width);\n  }\n\n  findCanvasSector(map, x, y) {\n    let axisX;\n    let axisY;\n    for (let i = 0; i < 1; i += 1) {\n      for (let j = 0; j < this.numberOfLevels; j += 1) {\n        if (x > 512) { return; }\n        if (map[i][j + 1] === undefined && x > map[i][j].x) {\n          axisX = j;\n        } else if (x > map[i][j].x && x < map[i][j + 1].x) {\n          axisX = j;\n        }\n      }\n    }\n    for (let i = 0; i < this.numberOfLevels; i += 1) {\n      for (let j = axisX; j < axisX + 1; j += 1) {\n        if (y > 512) { return; }\n        if (map[i + 1] === undefined && y > map[i][j].y) {\n          axisY = i;\n        } else if (y > map[i][j].y && y < map[i + 1][j].y) {\n          axisY = i;\n        }\n      }\n    }\n    return [axisY, axisX];\n  }\n\n  fillSector(x, y, color) {\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(x, y, this.cellSize, this.cellSize);\n  }\n\n  colorOfCanvasPixel(x, y) {\n    const data = this.ctx.getImageData(x, y, 1, 1).data;\n    return '#' + ('000000' + rgbToHex(data[0], data[1], data[2])).slice(-6);\n  }\n\n  getMousePos(evt) {\n    const rect = this.canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top,\n    };\n  }\n}\n\nexport { Canvas };\n","import { Canvas } from './canvas';\nimport { hex, setCurrentColor, setActiveTool, currentColor, prevColor } from './colors';\n\nconst canvas = new Canvas();\ncanvas.defaultFill();\nconst map = canvas.createMap();\nlet activeTool;\nlet started = false;\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  activeTool = localStorage.tool || 'pencil';\n  setActiveTool(activeTool);\n  currentColor.value = localStorage.currColor || '#008000';\n  prevColor.style.backgroundColor = localStorage.preColor || '#808080';\n  const dataURL = localStorage.getItem('canvasImg');\n  const img = new Image();\n  img.src = dataURL;\n  img.onload = () => {\n    canvas.ctx.drawImage(img, 0, 0);\n  };\n});\n\nwindow.addEventListener('beforeunload', () => {\n  localStorage.setItem('tool', activeTool);\n  localStorage.setItem('currColor', currentColor.value);\n  localStorage.setItem('preColor', hex(prevColor.style.backgroundColor));\n  localStorage.setItem('canvasImg', canvas.canvas.toDataURL());\n});\n\ndocument.getElementById('tools').addEventListener('click', (event) => {\n  document.getElementById('tools').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-tool', false)));\n  event.target.classList.toggle('active-tool');\n  const classList = event.target.classList;\n  const [, toolName, ] = classList;\n  activeTool = toolName;\n  if (activeTool === 'picker') {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', true)));\n  } else {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', false)));\n  }\n});\n\ndocument.getElementById('canvas').addEventListener('mousedown', (e) => {\n  const coordinates = canvas.getMousePos(e);\n  const sector = canvas.findCanvasSector(map, coordinates.x, coordinates.y);\n  switch (activeTool) {\n    case 'bucket':\n      canvas.fillSector(map[sector[0]][sector[1]].x,\n        map[sector[0]][sector[1]].y,\n        currentColor.value);\n      break;\n    case 'picker':\n      setCurrentColor(canvas.colorOfCanvasPixel(coordinates.x, coordinates.y));\n      break;\n    case 'pencil':\n      canvas.ctx.beginPath();\n      canvas.ctx.moveTo(coordinates.x, coordinates.y);\n      started = true;\n      document.getElementById('canvas').addEventListener('mousemove', (evt) => {\n        if (started) {\n          const coord = canvas.getMousePos(evt);\n          canvas.ctx.strokeStyle = currentColor.value;\n          canvas.ctx.lineTo(coord.x, coord.y);\n          canvas.ctx.stroke();\n        }\n      });\n      document.getElementById('canvas').addEventListener('mouseup', () => {\n        if (started) {\n          canvas.ctx.closePath();\n          started = false;\n        }\n      });\n      break;\n    default:\n      break;\n  }\n});\n\ndocument.getElementById('colors').addEventListener('click', (event) => {\n  if (activeTool === 'picker') {\n    if (event.target.id === 'current-color') {\n      prevColor.style.backgroundColor = currentColor.value;\n    }\n    switch (event.target.classList[1]) {\n      case 'second':\n        setCurrentColor(hex(prevColor.style.backgroundColor));\n        break;\n      case 'third':\n        setCurrentColor('#CD0000');\n        break;\n      case 'fourth':\n        setCurrentColor('#0000ff');\n        break;\n      default:\n        break;\n    }\n  } else if (activeTool !== 'picker' && event.target.id === 'current-color') {\n    event.preventDefault();\n  }\n});\n\ndocument.addEventListener('keydown', (event) => {\n  switch (event.keyCode) {\n    case 66:\n      activeTool = 'bucket';\n      setActiveTool(activeTool);\n      break;\n    case 67:\n      activeTool = 'picker';\n      setActiveTool(activeTool);\n      break;\n    case 80:\n      activeTool = 'pencil';\n      setActiveTool(activeTool);\n      break;\n    default:\n      break;\n  }\n});\n\nexport { currentColor, prevColor };\n"]}